{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Somji/OneDrive/Pictures/abcd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { dark, light, sanzy } from './google-theme';\nlet GoogleMapComponent = class GoogleMapComponent {\n  constructor(cropMonitoring) {\n    this.cropMonitoring = cropMonitoring;\n    this.EXTENT = [-Math.PI * 6378137, Math.PI * 6378137];\n    this.isSlider = true;\n    this.layerDaysListNDVIGp = [];\n    this.layerDaysListSMGp = [];\n    this.layerDaysListPI = [];\n    this.layerDaysListTmax = [];\n    this.sliderLayers = [];\n    this.sliderDateRange = [];\n    this.selectedSliderDate = '07-11-2022';\n    this.selectedTheme = 0;\n    this.theme = light;\n  }\n\n  ngOnInit() {}\n\n  theameClick(index) {\n    this.selectedTheme = index;\n    index == 1 && this.map.setOptions({\n      styles: dark\n    });\n    index == 0 && this.map.setOptions({\n      styles: light\n    });\n    index == 2 && this.map.setOptions({\n      styles: sanzy\n    });\n  }\n\n  ngOnChanges(changes) {\n    this.getLayersDetail().then(() => {\n      if (this.selectedLayer == 'Greenness Layer' && this.sliderLayers) {\n        this.ndviAndSm();\n        this.isSlider = true;\n      }\n\n      if (this.selectedLayer == 'SM Normal' && this.sliderLayers) {\n        this.ndviAndSm();\n        this.isSlider = true;\n      }\n\n      if (this.selectedLayer == 'Maximum Temperature' && this.sliderLayers) {\n        this.plotTmax(this.sliderLayers[this.sliderLayers.length - 1]['layer'], this.sliderLayers[this.sliderLayers.length - 1]['val']);\n        this.isSlider = true;\n      }\n\n      if (this.selectedLayer == 'Precipitation Index' && this.sliderLayers) {\n        this.plotSP(this.sliderLayers[this.sliderLayers.length - 1]['layer'], this.sliderLayers[this.sliderLayers.length - 1]['val']);\n        this.isSlider = true;\n      }\n\n      if (this.selectedLayer == 'Irrigation potential') {\n        this.plotIrriLayer();\n        this.isSlider = false;\n      }\n\n      if (this.selectedLayer == 'CCE Points') {\n        this.plotCceLayer();\n      }\n\n      if (this.selectedLayer == 'Cat Event Risk Rating') {\n        this.plotRisk();\n        this.isSlider = false;\n      }\n\n      if (this.selectedLayer == 'AI Crop Classification') {\n        this.aiCrop();\n        this.isSlider = false;\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    this.map = new google.maps.Map(document.getElementById(\"map\"), {\n      center: {\n        lat: 20.5937,\n        lng: 78.9629\n      },\n      zoom: 4,\n      opacity: 1,\n      mapTypeControl: false,\n      zoomControl: false,\n      zoomControlOptions: {\n        position: google.maps.ControlPosition.LEFT_CENTER\n      },\n      scaleControl: true,\n      streetViewControl: false,\n      styles: this.theme\n    });\n  }\n\n  locationExtent() {\n    this.cropMonitoring.getFitBounds(32, this.selectedState, this.selectedDistrict, this.selectedSubDist).subscribe(response => {\n      var Item_1 = new google.maps.LatLng(response[1] && response[1][0], response[1] && response[1][1]);\n      var myPlace = new google.maps.LatLng(response[0] && response[0][0], response[0] && response[0][1]);\n      var bounds = new google.maps.LatLngBounds(myPlace, Item_1);\n      response && response.length && this.map.fitBounds(bounds);\n    });\n  }\n\n  plotWMS(layer, filter) {\n    this.plotedLayer && this.map.overlayMapTypes.clear();\n    this.plotedLayer = new google.maps.ImageMapType({\n      getTileUrl: (coordinates, zoom) => {\n        return \"https://geo.skymetweather.com/geoserver/cite/wms?\" + \"&REQUEST=GetMap&SERVICE=WMS&VERSION=1.1.1\" + \"&LAYERS=\" + layer + \"&FORMAT=image%2Fpng\" + \"&transparent=true\" + \"&CQL_FILTER=\" + filter + \"&tiled=true\" + \"&matchRGBA=0%2C0%2C0%2C0&missRGBA=null\" + \"&SRS=EPSG:3857&WIDTH=256&HEIGHT=256\" + \"&BBOX=\" + this.xyzToBounds(coordinates.x, coordinates.y, zoom).join(\",\");\n      },\n      name: \"Landcover\",\n      alt: \"National Land Cover Database 2016\",\n      opacity: 0.7\n    });\n    this.map.overlayMapTypes.push(this.plotedLayer);\n    this.plotedLayer && this.locationExtent();\n  }\n\n  plotSingleWMS(layer, filter) {\n    var option = \"\";\n\n    if (filter && filter != '') {\n      option = \"https://geo.skymetweather.com/geoserver/cite/wms?\" + \"&REQUEST=GetMap&SERVICE=WMS&VERSION=1.1.1\" + \"&LAYERS=\" + layer + \"&FORMAT=image%2Fpng\" + \"&transparent=true\" + \"&tiled=true\" + \"&CQL_FILTER=\" + filter + \"&matchRGBA=0%2C0%2C0%2C0&missRGBA=null\" + \"&SRS=EPSG:3857&WIDTH=256&HEIGHT=256\" + \"&BBOX=\";\n    } else {\n      option = \"https://geo.skymetweather.com/geoserver/cite/wms?\" + \"&REQUEST=GetMap&SERVICE=WMS&VERSION=1.1.1\" + \"&LAYERS=\" + layer + \"&FORMAT=image%2Fpng\" + \"&transparent=true\" + \"&tiled=true\" + \"&matchRGBA=0%2C0%2C0%2C0&missRGBA=null\" + \"&SRS=EPSG:3857&WIDTH=256&HEIGHT=256\" + \"&BBOX=\";\n    }\n\n    this.plotedLayer && this.map.overlayMapTypes.clear();\n    this.plotedLayer = new google.maps.ImageMapType({\n      getTileUrl: (coordinates, zoom) => {\n        return option + this.xyzToBounds(coordinates.x, coordinates.y, zoom).join(\",\");\n      },\n      name: \"Landcover\",\n      alt: \"National Land Cover Database 2016\",\n      opacity: 0.7\n    });\n    this.map.overlayMapTypes.push(this.plotedLayer);\n    this.plotedLayer && this.locationExtent();\n  }\n\n  xyzToBounds(x, y, z) {\n    const tileSize = this.EXTENT[1] * 2 / Math.pow(2, z);\n    const minx = this.EXTENT[0] + x * tileSize;\n    const maxx = this.EXTENT[0] + (x + 1) * tileSize; // remember y origin starts at top\n\n    const miny = this.EXTENT[1] - (y + 1) * tileSize;\n    const maxy = this.EXTENT[1] - y * tileSize;\n    return [minx, miny, maxx, maxy];\n  }\n\n  createLayersData(layer) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var self = _this;\n      self.sliderLayers = [];\n      return new Promise((resolve, reject) => {\n        if (layer == 'Greenness Layer') {\n          self.layerDaysListNDVIGp.forEach(function (entry, index) {\n            self.sliderLayers.push({\n              layer: 'cite%3ARS_NDVI_' + entry['val'] + '_' + entry['year'],\n              date: self.formatDate(entry)\n            });\n          });\n        } else if (layer == 'SM Normal') {\n          self.layerDaysListSMGp.forEach(function (entry, index) {\n            self.sliderLayers.push({\n              layer: 'cite%3ARS_SM_' + entry['val'] + '_' + entry['year'],\n              date: self.formatDate(entry)\n            });\n          });\n        } else if (layer == 'Maximum Temperature') {\n          self.layerDaysListTmax.forEach(function (entry, index) {\n            self.sliderLayers.push({\n              layer: 'cite%3AARMS_TMax_view',\n              date: self.formatDate(entry),\n              val: entry.val\n            });\n          });\n        } else if (layer == 'Precipitation Index') {\n          self.layerDaysListPI.forEach(function (entry, index) {\n            self.sliderLayers.push({\n              layer: 'cite%3AARMS_PI_view',\n              date: self.formatDate(entry),\n              val: entry.val\n            });\n          });\n        }\n\n        _this.sliderTickIndex = self.sliderLayers.length - 1;\n        resolve(self.sliderLayers);\n      });\n    })();\n  }\n\n  getLayersDetail() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        _this2.cropMonitoring.getLayersDetails(32, \"\", _this2.selectedFromDate, _this2.selectedToDate).subscribe(res => {\n          if (res) {\n            _this2.layerDaysListNDVIGp = [];\n            _this2.layerDaysListSMGp = [];\n            _this2.layerDaysListPI = [];\n            _this2.layerDaysListTmax = [];\n\n            for (const key in res.ndvi.YearDetails) {\n              _this2.layerDaysListNDVIGp.push(res.ndvi.YearDetails[key]);\n            }\n\n            for (const key in res.sm.YearDetails) {\n              _this2.layerDaysListSMGp.push(res.sm.YearDetails[key]);\n            }\n\n            for (const key in res.pi.YearDetails) {\n              delete res.pi.YearDetails[key].val;\n              res.pi.YearDetails[key]['val'] = key;\n\n              _this2.layerDaysListPI.push(res.pi.YearDetails[key]);\n            }\n\n            for (const key in res.tmax.YearDetails) {\n              _this2.layerDaysListTmax.push(res.tmax.YearDetails[key]);\n            }\n\n            _this2.createLayersData(_this2.selectedLayer);\n\n            resolve(res);\n          }\n        });\n      });\n    })();\n  }\n\n  ndviAndSm() {\n    var filter;\n\n    if (this.selectedState && this.selectedState != \"All State\" && this.selectedDistrict == \"District\" && this.selectedSubDist == \"Sub District\") {\n      this.stLayer = \"state_name\" + \"%3C%3E%27\" + this.selectedState + \"%27\";\n      this.plotWMS(this.sliderLayers[this.sliderLayers.length - 1]['layer'] + '_GP', this.stLayer);\n    } else if (this.selectedDistrict && this.selectedDistrict != \"District\" && this.selectedState && this.selectedSubDist == \"Sub District\") {\n      this.cropMonitoring.getDistrictId(this.selectedDistrict).subscribe(response => {\n        this.stLayer = \"district%3C%3E%27\" + this.selectedDistrict + \"%27\";\n        this.plotWMS(this.sliderLayers[this.sliderLayers.length - 1]['layer'] + '_GP', this.stLayer);\n      });\n    } else if (this.selectedSubDist && this.selectedSubDist != \"Sub District\" && this.selectedState && this.selectedDistrict && this.selectedSubDist != \"Sub District\") {\n      this.cropMonitoring.getSubDistrictId(this.selectedDistrict).subscribe(response => {\n        this.stLayer = \"block%3C%3E%27\" + this.selectedSubDist + \"%27\";\n        this.plotWMS(this.sliderLayers[this.sliderLayers.length - 1]['layer'] + '_GP', this.stLayer);\n      });\n    } else if (this.selectedState == \"All State\" && this.selectedDistrict == \"District\" && this.selectedSubDist == \"Sub District\") {\n      this.stLayer = \"state_name%3D%271%27\";\n      this.plotWMS(this.sliderLayers[this.sliderLayers.length - 1]['layer'] + '_GP', this.stLayer);\n    }\n  }\n\n  plotTmax(layer, tmaxFilter) {\n    var stLayer = '';\n    if (this.selectedState && this.selectedState != \"All State\" && this.selectedDistrict == \"District\" && this.selectedSubDist == \"Sub District\") this.cropMonitoring.getStateId(this.selectedState).subscribe(response => {\n      stLayer = \"date_no%3D\" + tmaxFilter + '%20and%20sid%20%3D' + response[0].state_id;\n      this.plotWMS(layer, stLayer);\n    });else if (this.selectedDistrict && this.selectedDistrict != \"District\" && this.selectedState && this.selectedSubDist == \"Sub District\") {\n      this.cropMonitoring.getDistrictId(this.selectedDistrict).subscribe(response => {\n        stLayer = \"date_no%3D\" + tmaxFilter + ' and did =' + response[0].district_id;\n        this.plotWMS(layer, stLayer);\n      });\n    } else if (this.selectedSubDist && this.selectedSubDist != \"Sub District\" && this.selectedState && this.selectedDistrict && this.selectedSubDist != \"Sub District\") {\n      this.cropMonitoring.getSubDistrictId(this.selectedDistrict).subscribe(response => {\n        var date = tmaxFilter;\n        stLayer = `date_no%3D${date}%20and%20state%3D%27${this.selectedState}%27%26%26district%3D%27${this.selectedDistrict}%27%26%26tehsil%3D%27${this.selectedSubDist}%27`;\n        this.plotWMS(layer, stLayer);\n      });\n    } else if (this.selectedState == \"All State\" && this.selectedDistrict == \"District\" && this.selectedSubDist == \"Sub District\") {\n      stLayer = \"date_no%3D\" + tmaxFilter;\n      this.plotWMS(layer, stLayer);\n    }\n  }\n\n  plotSP(layer, spiFilter) {\n    var stLayer = '';\n    if (this.selectedState && this.selectedState != \"All State\" && this.selectedDistrict == \"District\" && this.selectedSubDist == \"Sub District\") this.cropMonitoring.getStateId(this.selectedState).subscribe(response => {\n      stLayer = \"date_no%3D\" + spiFilter + '%20and%20sid%20%3D' + response[0].state_id;\n      this.plotWMS(layer, stLayer);\n    });else if (this.selectedDistrict && this.selectedDistrict != \"District\" && this.selectedState && this.selectedSubDist == \"Sub District\") {\n      this.cropMonitoring.getDistrictId(this.selectedDistrict).subscribe(response => {\n        stLayer = \"date_no%3D\" + spiFilter + ' and did =' + response[0].district_id;\n        this.plotWMS(layer, stLayer);\n      });\n    } else if (this.selectedSubDist && this.selectedSubDist != \"Sub District\" && this.selectedState && this.selectedDistrict && this.selectedSubDist != \"Sub District\") {\n      this.cropMonitoring.getSubDistrictId(this.selectedDistrict).subscribe(response => {\n        var date = spiFilter;\n        stLayer = `date_no%3D${date}%20and%20state%3D%27${this.selectedState}%27%26%26district%3D%27${this.selectedDistrict}%27%26%26tehsil%3D%27${this.selectedSubDist}%27`;\n        this.plotWMS(layer, stLayer);\n      });\n    } else if (this.selectedState == \"All State\" && this.selectedDistrict == \"District\" && this.selectedSubDist == \"Sub District\") {\n      stLayer = \"date_no%3D\" + spiFilter;\n      this.plotWMS(layer, stLayer);\n    }\n  }\n\n  plotIrriLayer() {\n    var stLayer = '';\n\n    if (this.selectedState && this.selectedState != \"All State\" && this.selectedDistrict == \"District\" && this.selectedSubDist == \"Sub District\") {\n      stLayer = \"state_name\" + \"%3C%3E%27\" + this.selectedState + \"%27\";\n      this.plotWMS('cite%3ACP_IRRIGATION' + '_GP', stLayer);\n    } else if (this.selectedDistrict && this.selectedDistrict != \"District\" && this.selectedState && this.selectedSubDist == \"Sub District\") {\n      this.cropMonitoring.getDistrictId(this.selectedDistrict).subscribe(response => {\n        stLayer = \"district%3C%3E%27\" + this.selectedDistrict + \"%27\";\n        this.plotWMS('cite%3ACP_IRRIGATION' + '_GP', stLayer);\n      });\n    } else if (this.selectedSubDist && this.selectedSubDist != \"Sub District\" && this.selectedState && this.selectedDistrict && this.selectedSubDist != \"Sub District\") {\n      this.cropMonitoring.getSubDistrictId(this.selectedDistrict).subscribe(response => {\n        stLayer = \"block%3C%3E%27\" + this.selectedSubDist + \"%27\";\n        this.plotWMS('cite%3ACP_IRRIGATION' + '_GP', stLayer);\n      });\n    } else if (this.selectedState == \"All State\" && this.selectedDistrict == \"District\" && this.selectedSubDist == \"Sub District\") {\n      stLayer = \"state_name%3D%271%27\";\n      this.plotWMS('cite%3ACP_IRRIGATION' + '_GP', stLayer);\n    }\n  }\n\n  plotCceLayer() {\n    var stLayer = '';\n\n    if (this.selectedState && this.selectedState != \"All State\" && this.selectedDistrict == \"District\" && this.selectedSubDist == \"Sub District\") {\n      stLayer = \"\";\n      this.plotSingleWMS('cite%3Aarms_data_cce_points', stLayer);\n    } else if (this.selectedDistrict && this.selectedDistrict != \"District\" && this.selectedState && this.selectedSubDist == \"Sub District\") {\n      this.cropMonitoring.getDistrictId(this.selectedDistrict).subscribe(response => {\n        stLayer = \"\";\n        this.plotSingleWMS('cite%3Aarms_data_cce_points', stLayer);\n      });\n    } else if (this.selectedSubDist && this.selectedSubDist != \"Sub District\" && this.selectedState && this.selectedDistrict && this.selectedSubDist != \"Sub District\") {\n      this.cropMonitoring.getSubDistrictId(this.selectedDistrict).subscribe(response => {\n        stLayer = \"\";\n        this.plotSingleWMS('cite%3Aarms_data_cce_points', stLayer);\n      });\n    } else if (this.selectedState == \"All State\" && this.selectedDistrict == \"District\" && this.selectedSubDist == \"Sub District\") {\n      stLayer = '';\n      this.plotSingleWMS('cite%3Aarms_data_cce_points', stLayer);\n    }\n  }\n\n  plotRisk() {\n    var stLayer = '';\n\n    if (this.selectedState && this.selectedState != \"All State\" && this.selectedDistrict == \"District\" && this.selectedSubDist == \"Sub District\") {\n      stLayer = `state_name%3D%27${this.selectedState}%27`;\n      this.plotSingleWMS('cite:risk_pincode', stLayer);\n    } else if (this.selectedDistrict && this.selectedDistrict != \"District\" && this.selectedState && this.selectedSubDist == \"Sub District\") {\n      this.cropMonitoring.getDistrictId(this.selectedDistrict).subscribe(response => {\n        stLayer = `district%3D%27${this.selectedDistrict}%27`;\n        this.plotSingleWMS('cite:risk_pincode', stLayer);\n      });\n    } else if (this.selectedSubDist && this.selectedSubDist != \"Sub District\" && this.selectedState && this.selectedDistrict && this.selectedSubDist != \"Sub District\") {\n      this.cropMonitoring.getSubDistrictId(this.selectedDistrict).subscribe(response => {\n        //\"block%3D%27Fatehpur%20Sikri%27\"\n        stLayer = `block%3D%27${this.selectedSubDist}%27`; //stLayer = \"block%3D%27\" + this.selectedSubDist + \"%27\";\n\n        this.plotSingleWMS('cite:risk_pincode', stLayer);\n      });\n    } else if (this.selectedState == \"All State\" && this.selectedDistrict == \"District\" && this.selectedSubDist == \"Sub District\") {\n      stLayer = \"\";\n      this.plotSingleWMS('cite:risk_pincode', stLayer);\n    }\n  }\n\n  aiCrop() {\n    var stLayer = '';\n\n    if (this.selectedState && this.selectedState != \"All State\" && this.selectedDistrict == \"District\" && this.selectedSubDist == \"Sub District\") {\n      stLayer = `state_name%20%3C%3E%27${this.selectedState}%27`;\n      this.plotSingleWMS('cite%3AINDIA_MLCROPRABI2021_250M_GP', stLayer);\n    } else if (this.selectedDistrict && this.selectedDistrict != \"District\" && this.selectedState && this.selectedSubDist == \"Sub District\") {\n      this.cropMonitoring.getDistrictId(this.selectedDistrict).subscribe(response => {\n        stLayer = `district%3C%3E%27${this.selectedDistrict}%27`;\n        this.plotSingleWMS('cite%3AINDIA_MLCROPRABI2021_250M_GP', stLayer);\n      });\n    } else if (this.selectedSubDist && this.selectedSubDist != \"Sub District\" && this.selectedState && this.selectedDistrict && this.selectedSubDist != \"Sub District\") {\n      this.cropMonitoring.getSubDistrictId(this.selectedDistrict).subscribe(response => {\n        //\"block%3D%27Fatehpur%20Sikri%27\"\n        stLayer = `block%3D%27${this.selectedSubDist}%27`; //stLayer = \"block%3D%27\" + this.selectedSubDist + \"%27\";\n\n        this.plotSingleWMS('cite%3AINDIA_MLCROPRABI2021_250M_GP', stLayer);\n      });\n    } else if (this.selectedState == \"All State\" && this.selectedDistrict == \"District\" && this.selectedSubDist == \"Sub District\") {\n      stLayer = \"state_name%3D%271%27\";\n      this.plotSingleWMS('cite%3AINDIA_MLCROPRABI2021_250M_GP', stLayer);\n    }\n  }\n\n  onSliderTickChange(layer, index) {\n    this.sliderTickIndex = index;\n    this.selectedSliderDate = layer['date'];\n\n    if (this.selectedLayer == 'Greenness Layer' || this.selectedLayer == 'SM Normal') {\n      this.plotWMS(layer['layer'], this.stLayer);\n    } else if (this.selectedLayer == 'Maximum Temperature') {\n      this.plotTmax(layer['layer'], layer['val']);\n      console.log(layer, 'tmax');\n    } else if (this.selectedLayer == 'Precipitation Index') {\n      console.log(layer, 'pi');\n      this.plotSP(layer['layer'], layer['val']);\n    }\n  }\n\n  formatDate(item) {\n    var day = item.range.toString().split('-')[0];\n    var month = item.day.toString().split('-')[0];\n    return day + '-' + month + '-' + item.year;\n  }\n\n};\n\n__decorate([Input()], GoogleMapComponent.prototype, \"selectedLayer\", void 0);\n\n__decorate([Input()], GoogleMapComponent.prototype, \"selectedFromDate\", void 0);\n\n__decorate([Input()], GoogleMapComponent.prototype, \"selectedToDate\", void 0);\n\n__decorate([Input()], GoogleMapComponent.prototype, \"selectedState\", void 0);\n\n__decorate([Input()], GoogleMapComponent.prototype, \"selectedSubDist\", void 0);\n\n__decorate([Input()], GoogleMapComponent.prototype, \"selectedDistrict\", void 0);\n\nGoogleMapComponent = __decorate([Component({\n  selector: 'app-google-map',\n  templateUrl: './google-map.component.html',\n  styleUrls: ['./google-map.component.scss']\n})], GoogleMapComponent);\nexport { GoogleMapComponent };","map":null,"metadata":{},"sourceType":"module"}